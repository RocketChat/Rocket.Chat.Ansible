---
# tasks/mongodb.yml: MongoDB configuration for RocketChat.Ansible
  - name: Install Official MongoDB.org packages
    block:

    - name: Set official package names
      set_fact:
        rocket_chat_mongodb_packages:
          - mongodb-org
          - mongodb-org-server
        rocket_chat_mongodb_config: /etc/mongod.conf

    - name: Debian/Ubuntu MongoDB.org official pkgs tasks
      block:

      - name: Ensure the MongoDB repository key has been imported [Debian]
        apt_key:
          keyserver: "{{ rocket_chat_mongodb_keyserver }}"
          id: "{{ rocket_chat_mongodb_gpg_key }}"
        tags: repo

      - name: Ensure the MongoDB repository is present [Debian]
        apt_repository:
          repo: "{{ rocket_chat_mongodb_apt_repo }}"
          state: present
        tags: repo
        register: rocket_chat_mongodb_repo_state

      when:
        - (rocket_chat_mongodb_apt_repo is defined)
        - (rocket_chat_mongodb_apt_repo)
        - ((ansible_os_family | lower) == "debian")

    - name: RHEL-based MongoDB.org official pkgs tasks
      block:

        - name: Ensure the MongoDB repository key has been imported [RHEL]
          rpm_key:
            key: "{{ rocket_chat_mongodb_rpm_repo.pgp_key }}"
            state: present
          tags: repo

        - name: Ensure the MongoDB repository is present [RHEL]
          yum_repository:
            name: "{{ rocket_chat_mongodb_rpm_repo.name }}"
            baseurl: "{{ rocket_chat_mongodb_rpm_repo.baseurl }}"
            state: present
            description: "{{ rocket_chat_mongodb_rpm_repo.desc }}"
            gpgcheck: "{{ rocket_chat_mongodb_rpm_repo.gpgcheck }}"
            gpgkey:  "{{ rocket_chat_mongodb_rpm_repo.pgp_key }}"
          tags: repo
          register: rocket_chat_mongodb_repo_state

      when:
      - (rocket_chat_mongodb_rpm_repo is defined)
      - (rocket_chat_mongodb_rpm_repo)
      - ((ansible_os_family | lower) == "redhat")

    when:
      - (rocket_chat_mongodb_org_pkgs is defined)
      - (rocket_chat_mongodb_org_pkgs | bool)
    tags: repo

  - name: Ensure MongoDB Server is installed
    package:
      name: "{{ rocket_chat_mongodb_packages }}"
      state: "{{ (rocket_chat_mongodb_repo_state is changed) | ternary('latest','present') }}"

  - name: Deploy MongoDB service configuration
    template:
      src: "{{ rocket_chat_mongodb_config_template }}"
      dest: "{{ rocket_chat_mongodb_config }}"
    notify: Restart the MongoDB service

  - meta: flush_handlers

  - name: Ensure the MongoDB service is started/enabled
    service:
      name: "{{ rocket_chat_mongodb_service_name }}"
      state: started
      enabled: yes

  - name: Wait for MongoDB to come online
    wait_for:
      port: "{{ rocket_chat_mongodb_port }}"
      host: "{{ rocket_chat_mongodb_server }}"
      state: started

  - name: Ensure the MongoDB replSets have been initiated
    shell: >-
      mongo --quiet --eval
      'JSON.stringify(rs.initiate({_id:"{{ rocket_chat_mongodb_repl_setname }}",
      members: [{"_id":1, "host":
      "{{ rocket_chat_mongodb_server }}:{{ rocket_chat_mongodb_port }}"}]}))'
    become: yes
    become_user: "{{ rocket_chat_mongodb_service_user }}"
    args:
      executable: /bin/bash
    register: replSet_result
    changed_when:
      - not (replSet_result.stdout is search(' Object'))
      - ('ok' in (replSet_result.stdout | from_json))
      - (((replSet_result.stdout | from_json).ok | int) == 1)

  - name: Reset replSet config when /etc/hosts changes
    shell: >-
       mongo --quiet --eval
       'cfg = rs.conf();
       cfg.members[0].host = "{{ ansible_nodename }}";
       rs.reconfig(cfg, {force: true})'
    become: yes
    become_user: "{{ rocket_chat_mongodb_service_user }}"
    when:
      - (hosts_change_result is changed)
      - ((replSet_result is undefined) or (not (replSet_result is changed)))
    args:
      executable: /bin/bash
    notify:
      - Restart the MongoDB service
