---
os: linux
dist: xenial

env:
  - distribution: centos
    version: 7
  
  - distribution: debian
    version: stretch

#  - distribution: debian
#    version: jessie

  - distribution: debian
    version: buster
    
  - distribution: ubuntu
    version: 14.04

  - distribution: ubuntu
    version: 16.04
    
  - distribution: ubuntu
    version: 18.04
    
#  - distribution: ubuntu
#    version: 20.04

services:
  - docker

before_install:
  - 'sudo docker pull ${distribution}:${version}'
  - 'sudo docker build --no-cache --rm --file=tests/Dockerfile.${distribution}-${version} --tag=${distribution}-${version}:ansible tests'

script:
  - container_id=$(mktemp)
  - 'sudo docker run --detach --privileged -v /sys/fs/cgroup:/sys/fs/cgroup:ro --volume="${PWD}":/etc/ansible/roles/Rocket.Chat.Ansible:ro ${distribution}-${version}:ansible > "${container_id}"'
  
    # Verify Ansible is available in the container.
  - sudo docker exec --tty "$(cat ${container_id})" env TERM=xterm ansible --version
  
    # Verify Ansible Scripts 
  - 'sudo docker exec "$(cat ${container_id})" env ANSIBLE_FORCE_COLOR=1 ansible-playbook -v /etc/ansible/roles/Rocket.Chat.Ansible/tests/travis.yml --syntax-check'
  - 'sudo docker exec "$(cat ${container_id})" env ANSIBLE_FORCE_COLOR=1 ansible-playbook -v /etc/ansible/roles/Rocket.Chat.Ansible/tests/travis.yml'
#  - >
#    sudo docker exec "$(cat ${container_id})" env ANSIBLE_FORCE_COLOR=1 ansible-playbook -v /etc/ansible/roles/Rocket.Chat.Ansible/tests/travis.yml
#    | grep -q 'changed=0.*failed=0'
#    && (echo 'Idempotence test: pass' && exit 0)
#    || (echo 'Idempotence test: fail' && exit 1)
  - 'sudo docker rm -f "$(cat ${container_id})"'

#notifications:
#  webhooks: https://galaxy.ansible.com/api/v1/notifications/
